package com.chicu.aibot.strategy.scalping.service.impl;

import com.chicu.aibot.strategy.common.DefaultTradingParamsResolver;
import com.chicu.aibot.strategy.scalping.model.ScalpingStrategySettings;
import com.chicu.aibot.strategy.scalping.repository.ScalpingStrategySettingsRepository;
import com.chicu.aibot.strategy.scalping.service.ScalpingStrategySettingsService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Slf4j
@Service
@RequiredArgsConstructor
public class ScalpingStrategySettingsServiceImpl implements ScalpingStrategySettingsService {

    private final ScalpingStrategySettingsRepository repo;
    private final DefaultTradingParamsResolver defaults;

    @Value("${trading.defaults.symbol:BTCUSDT}")
    private String defaultSymbolProp;

    @Value("${trading.defaults.timeframe.scalping:1m}")
    private String defaultTfProp;

    @Override
    @Transactional
    public ScalpingStrategySettings getOrCreate(Long chatId) {
        return repo.findById(chatId).orElseGet(() -> {
            String symbol    = defaults.resolveSymbol(chatId, defaultSymbolProp, "BTCUSDT");
            String timeframe = defaults.resolveTimeframe(chatId, defaultTfProp, "1m");

            log.info("‚öôÔ∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Scalping –¥–ª—è chatId={}, —Å–æ–∑–¥–∞—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (symbol={}, tf={})",
                    chatId, symbol, timeframe);

            // –î–µ—Ñ–æ–ª—Ç—ã –ø–æ–¥ —Ç–µ–∫—É—â—É—é —Ç–∏–ø–∏—á–Ω—É—é –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å BTCUSDT –Ω–∞ 1m
            ScalpingStrategySettings def = ScalpingStrategySettings.builder()
                    .chatId(chatId)
                    .symbol(symbol)              // BTCUSDT –∏–∑ application.yml –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å
                    .timeframe(timeframe)        // 1m
                    .cachedCandlesLimit(300)     // –∏—Å—Ç–æ—Ä–∏–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ
                    .windowSize(20)              // –æ–∫–Ω–æ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –∏–º–ø—É–ª—å—Å–∞
                    .orderVolume(0.001)          // 0.001 BTC ~ ‚Äú–º–∏–∫—Ä–æ-–ª–æ—Ç–æ‚Äù
                    .priceChangeThreshold(0.15)  // –≤—Ö–æ–¥ –ø—Ä–∏ |Œî—Ü–µ–Ω—ã| ‚â• 0.15%
                    .spreadThreshold(0.03)       // —Ñ–∏–ª—å—Ç—Ä –ø–æ —Å–ø—Ä–µ–¥—É ‚â§ 0.03%
                    .takeProfitPct(0.25)         // —Ü–µ–ª—å 0.25%
                    .stopLossPct(0.20)           // SL 0.20%
                    .active(false)               // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–∫–ª—é—á–µ–Ω–æ
                    .build();

            return repo.saveAndFlush(def);
        });
    }

    @Override
    @Transactional
    public void save(ScalpingStrategySettings settings) {
        log.info("üíæ –°–æ—Ö—Ä–∞–Ω—è—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Scalping –¥–ª—è chatId={}", settings.getChatId());
        repo.saveAndFlush(settings);
    }
}
