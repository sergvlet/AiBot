package com.chicu.aibot.bot.menu.state;

import com.chicu.aibot.bot.menu.core.MenuService;
import com.chicu.aibot.bot.menu.core.MenuState;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.List;

@Slf4j
@Component
public class AiTradingState implements MenuState {

    private final InlineKeyboardMarkup keyboard;

    public AiTradingState() {
        this.keyboard = InlineKeyboardMarkup.builder()
                .keyboard(List.of(

                        List.of(InlineKeyboardButton.builder()
                                .text("üìÇ –í—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")
                                .callbackData("ai_select_strategy")
                                .build()),

                        List.of(InlineKeyboardButton.builder()
                                .text("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
                                .callbackData("ai_settings_params")
                                .build()),

                        List.of(
                                InlineKeyboardButton.builder()
                                        .text("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
                                        .callbackData("ai_stats")
                                        .build(),
                                InlineKeyboardButton.builder()
                                        .text("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
                                        .callbackData("ai_notifications")
                                        .build()
                        ),

                        // ‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–º
                        List.of(InlineKeyboardButton.builder()
                                .text("üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–º")
                                .callbackData("balance_menu")
                                .build()),

                        List.of(InlineKeyboardButton.builder()
                                .text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
                                .callbackData("main")
                                .build())
                ))
                .build();
    }

    @Override
    public String name() {
        return "ai_trading";
    }

    @Override
    public SendMessage render(Long chatId) {
        log.info("–†–µ–Ω–¥–µ—Ä AI-–º–µ–Ω—é –¥–ª—è chatId={}", chatId);
        return SendMessage.builder()
                .chatId(chatId.toString())
                .text("*ü§ñ AI-—Ç–æ—Ä–≥–æ–≤–ª—è*\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
                .parseMode("Markdown")
                .replyMarkup(keyboard)
                .build();
    }

    @Override
    public String handleInput(Update update) {
        if (!update.hasCallbackQuery()) {
            return name();
        }
        String data = update.getCallbackQuery().getData();
        log.info("AI-–º–µ–Ω—é: –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '{}'", data);
        return switch (data) {
            case "ai_select_strategy" -> "ai_select_strategy";
            case "ai_settings_params" -> "ai_settings_params";
            case "ai_stats"           -> "ai_stats";
            case "ai_notifications"   -> "ai_notifications";
            case "balance_menu"       -> "balance_menu"; // ‚úÖ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥
            case "main"               -> MenuService.MAIN_MENU;
            default -> {
                log.warn("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback '{}' –≤ AI-–º–µ–Ω—é, –æ—Å—Ç–∞—ë–º—Å—è", data);
                yield name();
            }
        };
    }
}
