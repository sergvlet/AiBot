package com.chicu.aibot.bot.menu.feature.ai.strategy.bollinger;

import com.chicu.aibot.bot.menu.core.MenuState;
import com.chicu.aibot.bot.menu.feature.ai.strategy.AiSelectStrategyState;
import com.chicu.aibot.bot.ui.AdaptiveKeyboard;
import com.chicu.aibot.bot.ui.UiAutorefreshService;
import com.chicu.aibot.strategy.bollinger.model.BollingerStrategySettings;
import com.chicu.aibot.strategy.bollinger.service.BollingerStrategySettingsService;
import jakarta.persistence.OptimisticLockException;
import lombok.RequiredArgsConstructor;
import org.springframework.dao.OptimisticLockingFailureException;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.List;

@Component
@RequiredArgsConstructor
public class BollingerHelpState implements MenuState {

    public static final String NAME = "ai_trading_bollinger_help";

    // –Ω–∞–≤–∏–≥–∞—Ü–∏—è
    private static final String BTN_BACK_PANEL   = BollingerConfigState.NAME;
    private static final String BTN_SELECT_STRAT = AiSelectStrategyState.NAME;
    private static final String BTN_AI_TRADING   = "ai_trading";

    // –ø—Ä–µ—Å–µ—Ç—ã
    private static final String PRESET_START     = "boll_preset_start";
    private static final String PRESET_VOLATILE  = "boll_preset_vol";
    private static final String PRESET_TREND     = "boll_preset_trend";
    private static final String PRESET_RESET     = "boll_preset_reset";

    private final BollingerStrategySettingsService settingsService;
    private final UiAutorefreshService uiAutorefresh;

    @Override public String name() { return NAME; }

    @Override
    public SendMessage render(Long chatId) {
        String text = ("""
                *üìò Bollinger Bands ‚Äî –ø–æ–ª–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞*

                *–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä.* –ü–æ–ª–æ—Å—ã –ë–æ–ª–ª–∏–Ω–¥–∂–µ—Ä–∞ = `SMA(period)` –∏ –¥–≤–∞ –∫–∞–Ω–∞–ª–∞ –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ `k¬∑œÉ` –æ—Ç SMA.
                ‚Ä¢ –í *—Ñ–ª—ç—Ç–µ* —Ü–µ–Ω–∞ —á–∞—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∫ —Å—Ä–µ–¥–Ω–µ–π.
                ‚Ä¢ –í *—Ç—Ä–µ–Ω–¥–µ* –≤—ã—Ö–æ–¥ –∑–∞ –≤–Ω–µ—à–Ω—é—é –ø–æ–ª–æ—Å—É –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è.

                *–õ–æ–≥–∏–∫–∞ –≤—Ö–æ–¥–æ–≤/–≤—ã—Ö–æ–¥–æ–≤:*
                ‚Ä¢ *LONG:* –∫–∞—Å–∞–Ω–∏–µ/–ø—Ä–æ–∫–æ–ª –Ω–∏–∂–Ω–µ–π –ø–æ–ª–æ—Å—ã ‚Üí –ø–æ–∫—É–ø–∫–∞.
                ‚Ä¢ *SHORT:* –∫–∞—Å–∞–Ω–∏–µ/–ø—Ä–æ–∫–æ–ª –≤–µ—Ä—Ö–Ω–µ–π –ø–æ–ª–æ—Å—ã ‚Üí –ø—Ä–æ–¥–∞–∂–∞.
                ‚Ä¢ –í—ã—Ö–æ–¥: –ø–æ `TP%`/`SL%` (–∂—ë—Å—Ç–∫–æ) –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç –∫ SMA (–µ—Å–ª–∏ —Ç–∞–∫ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ –≤–∞—à–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏).

                *–ö–Ω–æ–ø–∫–∏ –ø–∞–Ω–µ–ª–∏ –∏ —á—Ç–æ –æ–Ω–∏ –¥–µ–ª–∞—é—Ç:*
                ‚Ä¢ üéØ *–°–∏–º–≤–æ–ª* ‚Äî –≤—ã–±–æ—Ä –ø–∞—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, `ETHUSDT`).
                ‚Ä¢ ‚è± *–¢–§* ‚Äî —Ç–∞–π–º—Ñ—Ä–µ–π–º —Å–≤–µ—á–µ–π/—Å–∏–≥–Ω–∞–ª–æ–≤ (–±—ã—Å—Ç—Ä—ã–π –≤—ã–±–æ—Ä –æ—Ç `1s` –¥–æ `1M`).
                ‚Ä¢ üßÆ *–ò—Å—Ç–æ—Ä–∏—è* ‚Äî —Å–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–≤–µ—á–µ–π —Ö—Ä–∞–Ω–∏—Ç—å/–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å.
                ‚Ä¢ üí∞ *–û–±—ä—ë–º* ‚Äî —Ä–∞–∑–º–µ—Ä –æ–¥–Ω–æ–π —Å–¥–µ–ª–∫–∏ (–≤ –≤–∞—à–µ–π –ª–æ–≥–∏–∫–µ).
                ‚Ä¢ üìè *SMA* ‚Äî –ø–µ—Ä–∏–æ–¥ –ø—Ä–æ—Å—Ç–æ–π —Å–∫–æ–ª—å–∑—è—â–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, `20`).
                ‚Ä¢ œÉ *–ö–æ—ç—Ñ.* ‚Äî –º–Ω–æ–∂–∏—Ç–µ–ª—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è (`k`, –Ω–∞–ø—Ä–∏–º–µ—Ä, `2.0`).
                ‚Ä¢ üìà/*üìâ* *LONG/SHORT* ‚Äî –≤–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π.
                ‚Ä¢ üéØ *TP%* / üõ° *SL%* ‚Äî —Ü–µ–ª–∏ –ø—Ä–æ—Ñ–∏—Ç–∞ / –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–±—ã—Ç–∫–∞.
                ‚Ä¢ ‚ñ∂Ô∏è *–í–∫–ª/–í—ã–∫–ª* ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å/–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞.
                ‚Ä¢ ‚ü≥ *–û–±–Ω–æ–≤–∏—Ç—å* ‚Äî —Ä—É—á–Ω–∞—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ –ø–∞–Ω–µ–ª–∏.

                *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:*
                ‚Ä¢ *–§–ª—ç—Ç:* `SMA 20‚Äì50`, `k 2.0‚Äì2.5`, `TP 0.5‚Äì1.0%`, `SL 0.4‚Äì0.8%`.
                ‚Ä¢ *–¢—Ä–µ–Ω–¥:* —Å–º–µ—â–∞–π—Ç–µ—Å—å –∫ `SMA 50‚Äì100` –∏–ª–∏ `k 2.5‚Äì3.0`; `TP` –≤—ã—à–µ, `SL` –æ—Å—Ç–æ—Ä–æ–∂–Ω–µ–µ.
                ‚Ä¢ –ß–µ–º –Ω–∏–∂–µ –¢–§ ‚Äî —Ç–µ–º –±–æ–ª—å—à–µ —à—É–º –∏ –≤–ª–∏—è–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–π/—Å–ø—Ä–µ–¥–∞.

                –ù–∏–∂–µ ‚Äî *–ø—Ä–µ—Å–µ—Ç—ã* –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞. –ù–∞–∂–º–∏—Ç–µ ‚Äî –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è –∏ –≤—ã –≤–µ—Ä–Ω—ë—Ç–µ—Å—å –Ω–∞ –ø–∞–Ω–µ–ª—å.

                *–ü—Ä–µ—Å–µ—Ç—ã:*
                ‚Ä¢ *–°—Ç–∞—Ä—Ç* ‚Äî –∞–∫–∫—É—Ä–∞—Ç–Ω—ã–π –±–∞–∑–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å:
                  –¢–§ `1m`, –ò—Å—Ç–æ—Ä–∏—è `720`, SMA `20`, œÉ `2.0`, TP `0.5%`, SL `0.4%`.
                ‚Ä¢ *–í–æ–ª–∞—Ç–∏–ª—å–Ω—ã–π* ‚Äî –¥–ª—è ¬´—Ä–≤–∞–Ω–æ–≥–æ¬ª —Ä—ã–Ω–∫–∞:
                  –¢–§ `30s`, –ò—Å—Ç–æ—Ä–∏—è `720`, SMA `20`, œÉ `2.5`, TP `0.6%`, SL `0.8%`.
                ‚Ä¢ *–¢—Ä–µ–Ω–¥* ‚Äî –¥–ª—è —É—Å—Ç–æ–π—á–∏–≤–æ–≥–æ —Ç—Ä–µ–Ω–¥–∞:
                  –¢–§ `5m`, –ò—Å—Ç–æ—Ä–∏—è `720`, SMA `50`, œÉ `2.0`, TP `1.2%`, SL `0.6%`.
                ‚Ä¢ *–°–±—Ä–æ—Å* ‚Äî –≤–µ—Ä–Ω—É—Ç—å –¥–µ—Ñ–æ–ª—Ç:
                  –¢–§ `1m`, –ò—Å—Ç–æ—Ä–∏—è `520`, SMA `20`, œÉ `2.0`, TP `1.0%`, SL `0.5%`.

                _–ü—Ä–µ—Å–µ—Ç—ã –Ω–µ –º–µ–Ω—è—é—Ç —Å–∏–º–≤–æ–ª, –æ–±—ä—ë–º, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è (LONG/SHORT) –∏ –Ω–µ —Å—Ç–∞—Ä—Ç—É—é—Ç/–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—é._
                """).stripTrailing();

        // --- –∫–Ω–æ–ø–∫–∏ (–∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Ä–∞—Å–∫–ª–∞–¥–∫–∞) ---
        List<InlineKeyboardButton> presets1 = List.of(
                AdaptiveKeyboard.btn("‚≠ê –°—Ç–∞—Ä—Ç", PRESET_START),
                AdaptiveKeyboard.btn("üå™ –í–æ–ª–∞—Ç–∏–ª—å–Ω—ã–π", PRESET_VOLATILE)
        );
        List<InlineKeyboardButton> presets2 = List.of(
                AdaptiveKeyboard.btn("üìà –¢—Ä–µ–Ω–¥", PRESET_TREND),
                AdaptiveKeyboard.btn("‚ôªÔ∏è –°–±—Ä–æ—Å", PRESET_RESET)
        );
        List<InlineKeyboardButton> nav = List.of(
                AdaptiveKeyboard.btn("‚Äπ –ù–∞–∑–∞–¥ –∫ –ø–∞–Ω–µ–ª–∏", BTN_BACK_PANEL),
                AdaptiveKeyboard.btn("–í—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏", BTN_SELECT_STRAT),
                AdaptiveKeyboard.btn("AI-–º–µ–Ω—é", BTN_AI_TRADING)
        );

        InlineKeyboardMarkup kb = AdaptiveKeyboard.markupFromGroups(List.of(presets1, presets2, nav));

        return SendMessage.builder()
                .chatId(chatId.toString())
                .text(text)
                .parseMode("Markdown")
                .disableWebPagePreview(true)
                .replyMarkup(kb)
                .build();
    }

    @Override
    public String handleInput(Update update) {
        if (update == null || !update.hasCallbackQuery()) return NAME;

        final String data   = update.getCallbackQuery().getData();
        final Long   chatId = update.getCallbackQuery().getMessage().getChatId();

        // –ø—Ä–µ—Å–µ—Ç—ã ‚Äî –ø—Ä–∏–º–µ–Ω—è–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –ø–∞–Ω–µ–ª—å
        switch (data) {
            case PRESET_START   -> { applyPreset(chatId, Preset.START);   return BollingerConfigState.NAME; }
            case PRESET_VOLATILE-> { applyPreset(chatId, Preset.VOL);     return BollingerConfigState.NAME; }
            case PRESET_TREND   -> { applyPreset(chatId, Preset.TREND);   return BollingerConfigState.NAME; }
            case PRESET_RESET   -> { applyPreset(chatId, Preset.RESET);   return BollingerConfigState.NAME; }
        }

        // –Ω–∞–≤–∏–≥–∞—Ü–∏—è
        return switch (data) {
            case BTN_BACK_PANEL   -> BollingerConfigState.NAME;
            case BTN_SELECT_STRAT -> AiSelectStrategyState.NAME;
            case BTN_AI_TRADING   -> "ai_trading";
            default               -> NAME;
        };
    }

    /* ================= –ø—Ä–µ—Å–µ—Ç—ã ================= */

    private enum Preset { START, VOL, TREND, RESET }

    private void applyPreset(Long chatId, Preset p) {
        // –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏, —á—Ç–æ–±—ã —Å–Ω–∏–∑–∏—Ç—å —à–∞–Ω—Å –≥–æ–Ω–æ–∫
        uiAutorefresh.disable(chatId, BollingerConfigState.NAME);

        int attempts = 0;
        while (true) {
            attempts++;
            try {
                BollingerStrategySettings s = settingsService.getOrCreate(chatId);
                mutatePreset(s, p);
                settingsService.save(s);
                break; // —É—Å–ø–µ—Ö
            } catch (OptimisticLockingFailureException | OptimisticLockException e) {
                if (attempts >= 3) throw e;
                try { Thread.sleep(30L); } catch (InterruptedException ignored) {}
            }
        }

        // –≤–∫–ª—é—á–∏–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: –ø–∞–Ω–µ–ª—å –ø–æ–¥—Ö–≤–∞—Ç–∏—Ç –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        uiAutorefresh.enable(chatId, BollingerConfigState.NAME);
    }

    private static void mutatePreset(BollingerStrategySettings s, Preset p) {
        switch (p) {
            case START -> {
                s.setTimeframe("1m");
                s.setCachedCandlesLimit(720);
                s.setPeriod(20);
                s.setStdDevMultiplier(2.0);
                s.setTakeProfitPct(0.5);
                s.setStopLossPct(0.4);
            }
            case VOL -> {
                s.setTimeframe("30s");
                s.setCachedCandlesLimit(720);
                s.setPeriod(20);
                s.setStdDevMultiplier(2.5);
                s.setTakeProfitPct(0.6);
                s.setStopLossPct(0.8);
            }
            case TREND -> {
                s.setTimeframe("5m");
                s.setCachedCandlesLimit(720);
                s.setPeriod(50);
                s.setStdDevMultiplier(2.0);
                s.setTakeProfitPct(1.2);
                s.setStopLossPct(0.6);
            }
            case RESET -> {
                s.setTimeframe("1m");
                s.setCachedCandlesLimit(520);
                s.setPeriod(20);
                s.setStdDevMultiplier(2.0);
                s.setTakeProfitPct(1.0);
                s.setStopLossPct(0.5);
            }
        }
    }
}
