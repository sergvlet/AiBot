package com.chicu.aibot.bot.menu.feature.ai.strategy.scalping;

import com.chicu.aibot.bot.menu.core.MenuSessionService;
import com.chicu.aibot.bot.menu.core.MenuState;
import com.chicu.aibot.bot.menu.feature.ai.strategy.scalping.service.ScalpingPanelRenderer;
import com.chicu.aibot.bot.menu.feature.common.AiSelectSymbolState;
import com.chicu.aibot.bot.ui.UiAutorefreshService;
import com.chicu.aibot.strategy.scalping.model.ScalpingStrategySettings;
import com.chicu.aibot.strategy.scalping.service.ScalpingStrategySettingsService;
import com.chicu.aibot.trading.scheduler.SchedulerService;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;

@Component
@RequiredArgsConstructor
public class ScalpingConfigState implements MenuState {

    public static final String NAME = "ai_trading_scalping_config";

    // —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ callbacks
    private static final String BTN_EDIT_SYMBOL   = "edit_symbol";
    private static final String BTN_TOGGLE_ACTIVE = "scalp_toggle_active";
    private static final String BTN_REFRESH       = "scalp_refresh";
    private static final String BTN_HELP          = "scalp_help";
    private static final String BTN_HELP_BACK     = "scalp_help_back";

    private final ScalpingStrategySettingsService settingsService;
    private final MenuSessionService sessionService;
    private final SchedulerService schedulerService;
    private final ScalpingPanelRenderer panelRenderer;
    private final UiAutorefreshService uiAutorefresh;

    /** –ß–∞—Ç—ã, –≥–¥–µ —Å–µ–π—á–∞—Å –æ—Ç–∫—Ä—ã—Ç —Ä–µ–∂–∏–º "–°–ø—Ä–∞–≤–∫–∞". */
    private final Set<Long> helpMode = ConcurrentHashMap.newKeySet();

    @Override
    public String name() { return NAME; }

    @Override
    public SendMessage render(Long chatId) {
        // –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ "–°–ø—Ä–∞–≤–∫–∞" ‚Äî —Ä–∏—Å—É–µ–º –µ—ë –∏ –ù–ï –≤–∫–ª—é—á–∞–µ–º –∞–≤—Çorefresh
        if (helpMode.contains(chatId)) {
            return renderHelp(chatId);
        }

        // –æ–±—ã—á–Ω–∞—è –ø–∞–Ω–µ–ª—å + –≤–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (—Ç–∞–π–º–µ—Ä —Å–∞–º —Å–¥–µ–ª–∞–µ—Ç edit)
        uiAutorefresh.enable(chatId, NAME);
        return panelRenderer.render(chatId);
    }

    @Override
    public String handleInput(Update update) {
        if (!update.hasCallbackQuery()) return NAME;

        String data  = update.getCallbackQuery().getData();
        Long chatId  = update.getCallbackQuery().getMessage().getChatId();

        // —Ä—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏
        if (BTN_REFRESH.equals(data)) {
            helpMode.remove(chatId);
            uiAutorefresh.enable(chatId, NAME);
            return NAME;
        }

        // –∑–∞–ø—É—Å–∫/–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
        if (BTN_TOGGLE_ACTIVE.equals(data)) {
            ScalpingStrategySettings s = settingsService.getOrCreate(chatId);
            s.setActive(!s.isActive());
            if (s.isActive()) {
                schedulerService.startStrategy(chatId, s.getType().name());
            } else {
                schedulerService.stopStrategy(chatId, s.getType().name());
            }
            settingsService.save(s);
            return NAME;
        }

        // –≤—ã—Ö–æ–¥ –Ω–∞–∑–∞–¥ ‚Äî –æ—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        if ("ai_trading".equals(data)) {
            helpMode.remove(chatId);
            uiAutorefresh.disable(chatId, NAME);
            return "ai_trading";
        }

        // –≤—ã–±–æ—Ä –ø–∞—Ä—ã ‚Äî –æ—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —É—Ö–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞
        if (BTN_EDIT_SYMBOL.equals(data)) {
            helpMode.remove(chatId);
            uiAutorefresh.disable(chatId, NAME);
            sessionService.setEditingField(chatId, "symbol");
            sessionService.setReturnState(chatId, NAME);
            return AiSelectSymbolState.NAME;
        }

        // —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–æ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ‚Äî —Ç–æ–∂–µ –æ—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        if (data.startsWith("scalp_edit_")) {
            helpMode.remove(chatId);
            uiAutorefresh.disable(chatId, NAME);
            String field = data.substring("scalp_edit_".length());
            sessionService.setEditingField(chatId, field);
            return ScalpingAdjustState.NAME;
        }

        // ‚Äî‚Äî‚Äî –°–ø—Ä–∞–≤–∫–∞ ‚Äî‚Äî‚Äî
        if (BTN_HELP.equals(data)) {
            uiAutorefresh.disable(chatId, NAME);
            helpMode.add(chatId);
            return NAME;
        }

        if (BTN_HELP_BACK.equals(data)) {
            // –≤—ã—Ö–æ–¥–∏–º –∏–∑ help-—Ä–µ–∂–∏–º–∞: –≤–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—É—é –ø–∞–Ω–µ–ª—å
            helpMode.remove(chatId);
            uiAutorefresh.enable(chatId, NAME);
            return NAME;
        }

        return NAME;
    }

    // ===================== HELP RENDER =====================

    private SendMessage renderHelp(Long chatId) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        rows.add(List.of(
                InlineKeyboardButton.builder().text("‚Äπ –ù–∞–∑–∞–¥ –∫ –ø–∞–Ω–µ–ª–∏").callbackData(BTN_HELP_BACK).build()
        ));

        return SendMessage.builder()
                .chatId(chatId.toString())
                .text(helpText())
                .parseMode("Markdown")
                .disableWebPagePreview(true)
                .replyMarkup(InlineKeyboardMarkup.builder().keyboard(rows).build())
                .build();
    }

    private String helpText() {
        return """
               *‚ÑπÔ∏è –°–∫–∞–ª—å–ø–∏–Ω–≥ ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏*

               *–ò–¥–µ—è.*
               –°—Ç—Ä–∞—Ç–µ–≥–∏—è –ª–æ–≤–∏—Ç –∫–æ—Ä–æ—Ç–∫–∏–µ –∏–º–ø—É–ª—å—Å—ã —Ü–µ–Ω—ã. –í—Ö–æ–¥ ‚Äî –∫–æ–≥–¥–∞ –º–æ–¥—É–ª—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã (Œî) –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–∫–Ω–æ
               –ø—Ä–µ–≤—ã—à–∞–µ—Ç *–¢—Ä–∏–≥–≥–µ—Ä –≤—Ö–æ–¥–∞, %*, –ø—Ä–∏ —ç—Ç–æ–º —Ä—ã–Ω–æ—á–Ω—ã–π *—Å–ø—Ä–µ–¥* –Ω–µ —à–∏—Ä–µ *–ú–∞–∫—Å. —Å–ø—Ä–µ–¥, %*.
               –í—ã—Ö–æ–¥ ‚Äî –ø–æ *–¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç, %* –∏–ª–∏ *–°—Ç–æ–ø-–ª–æ—Å—Å, %*.

               *–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç (–≤–∫—Ä–∞—Ç—Ü–µ):*
               1) –ü–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ç–∞–π–º—Ñ—Ä–µ–π–º—É –±–µ—Ä—ë—Ç—Å—è `–û–∫–Ω–æ` –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–≤–µ—á–µ–π.
               2) –°—á–∏—Ç–∞–µ—Ç—Å—è –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –≤ —ç—Ç–æ–º –æ–∫–Ω–µ.
               3) –ï—Å–ª–∏ |Œî| ‚â• *–¢—Ä–∏–≥–≥–µ—Ä –≤—Ö–æ–¥–∞, %* –∏ —Å–ø—Ä–µ–¥ ‚â§ *–ú–∞–∫—Å. —Å–ø—Ä–µ–¥, %* ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è *—Ä—ã–Ω–æ—á–Ω—ã–π –æ—Ä–¥–µ—Ä*:
                  ‚Ä¢ BUY ‚Äî –æ–±—ä—ë–º —Å—á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ QUOTE;
                  ‚Ä¢ SELL ‚Äî –∫–∞–∫ –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ BASE.
               4) –ü–æ–∑–∏—Ü–∏—è –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ *–¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç, %* (—Ñ–∏–∫—Å–∏—Ä—É–µ–º –ø—Ä–∏–±—ã–ª—å) –∏–ª–∏ –ø–æ *–°—Ç–æ–ø-–ª–æ—Å—Å, %*.

               *–ö–Ω–æ–ø–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–Ω–µ–ª–∏:*
               ‚Ä¢ üéØ *–°–∏–º–≤–æ–ª* ‚Äî —Ç–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `ETHUSDT`).
               ‚Ä¢ üí∞ *–û–±—ä—ë–º —Å–¥–µ–ª–∫–∏, %* ‚Äî –¥–æ–ª—è –æ—Ç —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ (BUY ‚Äî –æ—Ç QUOTE; SELL ‚Äî –æ—Ç BASE).
               ‚Ä¢ üìã *–ò—Å—Ç–æ—Ä–∏—è* ‚Äî –ª–∏–º–∏—Ç –∫—ç—à–∏—Ä—É–µ–º—ã—Ö —Å–≤–µ—á–µ–π (—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä).
               ‚Ä¢ ü™ü *–û–∫–Ω–æ* ‚Äî —Ä–∞–∑–º–µ—Ä —Å–∫–æ–ª—å–∑—è—â–µ–≥–æ –æ–∫–Ω–∞; –º–µ–Ω—å—à–µ ‚Äî —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–µ–µ –∏ —á–∞—â–µ —Å–∏–≥–Ω–∞–ª—ã.
               ‚Ä¢ ‚ö° *–¢—Ä–∏–≥–≥–µ—Ä –≤—Ö–æ–¥–∞, %* ‚Äî –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–º–ø—É–ª—å—Å –¥–ª—è –≤—Ö–æ–¥–∞; –≤—ã—à–µ ‚Äî —Ä–µ–∂–µ, –Ω–æ —á–∏—â–µ.
               ‚Ä¢ ‚ÜîÔ∏è *–ú–∞–∫—Å. —Å–ø—Ä–µ–¥, %* ‚Äî —Ñ–∏–ª—å—Ç—Ä –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏; –ø—Ä–∏ —à–∏—Ä–æ–∫–æ–º —Å–ø—Ä–µ–¥–µ –≤—Ö–æ–¥ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è.
               ‚Ä¢ üéØ *–¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç, %* ‚Äî —Ü–µ–ª—å –ø—Ä–∏–±—ã–ª–∏ –æ—Ç —Ü–µ–Ω—ã –≤—Ö–æ–¥–∞.
               ‚Ä¢ üõ° *–°—Ç–æ–ø-–ª–æ—Å—Å, %* ‚Äî –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–±—ã—Ç–∫–∞ –æ—Ç —Ü–µ–Ω—ã –≤—Ö–æ–¥–∞.
               ‚Ä¢ ‚è± *–û–±–Ω–æ–≤–∏—Ç—å* ‚Äî —Ä—É—á–Ω–∞—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ –ø–∞–Ω–µ–ª–∏.
               ‚Ä¢ ‚ñ∂Ô∏è *–°—Ç—Ä–∞—Ç–µ–≥–∏—è: –í–ö–õ/–í–´–ö–õ* ‚Äî —Å—Ç–∞—Ä—Ç/—Å—Ç–æ–ø —Ñ–æ–Ω–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞ —Å–∏–≥–Ω–∞–ª–æ–≤.

               *–°–æ–≤–µ—Ç—ã:*
               ‚Ä¢ –ù–∞—á–Ω–∏—Ç–µ —Å –º–∞–ª–æ–≥–æ *–æ–±—ä—ë–º–∞* –∏ –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã—Ö *TP/SL*.
               ‚Ä¢ –õ–æ–∂–Ω—ã—Ö –≤—Ö–æ–¥–æ–≤ –º–Ω–æ–≥–æ ‚Äî —É–≤–µ–ª–∏—á—å—Ç–µ *–¢—Ä–∏–≥–≥–µ—Ä –≤—Ö–æ–¥–∞* –∏/–∏–ª–∏ *–û–∫–Ω–æ*.
               ‚Ä¢ –í—Ö–æ–¥–æ–≤ –º–∞–ª–æ ‚Äî —Å–Ω–∏–∑—å—Ç–µ –ø–æ—Ä–æ–≥/–æ–∫–Ω–æ, –Ω–æ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –∫–∞—á–µ—Å—Ç–≤–æ–º —Å–∏–≥–Ω–∞–ª–æ–≤.
               ‚Ä¢ –ù–∞ –Ω–µ–ª–∏–∫–≤–∏–¥–Ω—ã—Ö –ø–∞—Ä–∞—Ö –ø–æ–¥–Ω–∏–º–∏—Ç–µ *–ú–∞–∫—Å. —Å–ø—Ä–µ–¥* –∏–ª–∏ —Å–º–µ–Ω–∏—Ç–µ —Å–∏–º–≤–æ–ª.

               _–¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ —Ç–µ—Å—Ç–Ω–µ—Ç–µ/–º–∏–∫—Ä–æ-–æ–±—ä—ë–º–∞—Ö: —Å–∫–∞–ª—å–ø–∏–Ω–≥ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ –∫–æ–º–∏—Å—Å–∏—è–º –∏ –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏—é._
               """;
    }
}
