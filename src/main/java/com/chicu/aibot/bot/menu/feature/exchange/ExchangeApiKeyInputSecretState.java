package com.chicu.aibot.bot.menu.feature.exchange;

import com.chicu.aibot.bot.menu.core.MenuSessionService;
import com.chicu.aibot.bot.menu.core.MenuState;
import com.chicu.aibot.exchange.model.ExchangeSettings;
import com.chicu.aibot.exchange.service.ExchangeSettingsService;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;

@Component
@RequiredArgsConstructor
public class ExchangeApiKeyInputSecretState implements MenuState {

    public static final String NAME = "exchange_api_input_secret";

    private final MenuSessionService session;
    private final ExchangeSettingsService exchangeService;

    @Override
    public String name() {
        return NAME;
    }

    @Override
    public SendMessage render(Long chatId) {
        ExchangeSettings settings = exchangeService.getOrCreate(chatId);
        return SendMessage.builder()
                .chatId(chatId.toString())
                .text("üîí –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ *—Å–µ–∫—Ä–µ—Ç–Ω—ã–π* API-–∫–ª—é—á –¥–ª—è —Å–µ—Ç–∏ `"
                        + settings.getNetwork() + "`:")
                .parseMode("Markdown")
                .build();
    }

    @Override
    public String handleInput(Update update) {
        if (!update.hasMessage()) {
            return NAME;
        }
        Message msg = update.getMessage();
        Long chatId = msg.getChatId();
        String secretKey = msg.getText().trim();

        // –ë–µ—Ä—ë–º –ø—É–±–ª–∏—á–Ω—ã–π –∏–∑ —Å–µ—Å—Å–∏–∏
        String publicKey = session.getNextValue(chatId);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–∞ –∫–ª—é—á–∞
        exchangeService.saveApiKeys(chatId, publicKey, secretKey);

        // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
        session.clearNextValue(chatId);

        boolean ok = exchangeService.testConnection(chatId);
        String text = ok
            ? "‚úÖ –ö–ª—é—á–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
            : "‚ùå –ö–ª—é—á–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è.";

        return String.valueOf(SendMessage.builder()
                .chatId(chatId.toString())
                .text(text)
                .build());
    }
}
