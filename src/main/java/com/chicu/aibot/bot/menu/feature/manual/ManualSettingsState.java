package com.chicu.aibot.bot.menu.feature.manual;

import com.chicu.aibot.bot.menu.core.MenuState;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.List;

@Slf4j
@Component
public class ManualSettingsState implements MenuState {

    private final InlineKeyboardMarkup keyboard;

    public ManualSettingsState() {
        this.keyboard = InlineKeyboardMarkup.builder()
            .keyboard(List.of(
                // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞–º–∏ API
                List.of(
                    InlineKeyboardButton.builder()
                        .text("üîë API Keys")
                        .callbackData("manual_settings_api_keys")
                        .build()
                ),
                // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–æ—Ä–≥–æ–≤–ª–∏
                List.of(
                    InlineKeyboardButton.builder()
                        .text("üìä –õ–µ–≤–µ—Ä–∏–¥–∂")
                        .callbackData("manual_settings_leverage")
                        .build(),
                    InlineKeyboardButton.builder()
                        .text("üí∏ –†–∞–∑–º–µ—Ä –æ—Ä–¥–µ—Ä–∞")
                        .callbackData("manual_settings_order_size")
                        .build()
                ),
                // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                List.of(
                    InlineKeyboardButton.builder()
                        .text("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
                        .callbackData("manual_settings_notifications")
                        .build()
                ),
                // –ù–∞–∑–∞–¥
                List.of(
                    InlineKeyboardButton.builder()
                        .text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
                        .callbackData("manual_trading_settings")
                        .build()
                )
            ))
            .build();
    }

    @Override
    public String name() {
        return "manual_settings";
    }

    @Override
    public SendMessage render(Long chatId) {
        log.info("–†–µ–Ω–¥–µ—Ä –ø–æ–¥–º–µ–Ω—é ¬´–ù–∞—Å—Ç—Ä–æ–π–∫–∏¬ª –¥–ª—è chatId={}", chatId);
        return SendMessage.builder()
                .chatId(chatId.toString())
                .text("*‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä—É—á–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏*\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:")
                .parseMode("Markdown")
                .replyMarkup(keyboard)
                .build();
    }

    @Override
    public String handleInput(Update update) {
        if (!update.hasCallbackQuery()) {
            return name();
        }
        String data = update.getCallbackQuery().getData();
        log.info("ManualSettingsState: –Ω–∞–∂–∞—Ç '{}'", data);
        return switch (data) {
            case "manual_settings_api_keys"        -> "manual_settings_api_keys";
            case "manual_settings_leverage"        -> "manual_settings_leverage";
            case "manual_settings_order_size"      -> "manual_settings_order_size";
            case "manual_settings_notifications"   -> "manual_settings_notifications";
            case "manual_trading_settings"         -> "manual_trading_settings";
            default -> {
                log.warn("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback '{}' –≤ ManualSettings", data);
                yield name();
            }
        };
    }
}
